openapi: 3.0.3
info:
  title: Q-ON API仕様書
  description: きゅうON!（Q-ON!）に関するAPI仕様書。 **CRUD操作については省略しているところがあるので適宜追加すること！**
  version: 1.0.0
servers:
  - url: http://localhost:8003
    description: "モックサーバ"
  - url: http://localhost:3000
    description: "ローカルサーバ"

tags:
  - name: "user"
    description: "ユーザに関するAPI"
  - name: "calendar"
    description: "カレンダーに関するAPI"
  - name: "shift"
    description: "バイトのシフトに関するAPI"
  - name: "partTime"
    description: "バイトに関するAPI"
  - name: "billingGoal"
    description: "期待値計算に関するAPI"
  - name: "graph"
    description: "グラフに関するAPI"

paths:
  "/api/v1/auth/sign_in":
    post:
      tags:
        - "user"
      summary: "ログイン"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "test@test.com"
                password:
                  type: string
                  example: "password"
      responses:
        "200":
          description: "ログインが成功した場合"

  "/api/v1/auth":
    post:
      tags:
        - "user"
      summary: "新規登録"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "test@test.com"
                password:
                  type: string
                  example: "password"
                password_confirmation:
                  type: string
                  example: "password"
      responses:
        "200":
          description: "新規登録が成功した場合"
    delete:
      tags:
        - "user"
      summary: "ユーザの削除"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "ユーザの削除が成功した場合"

  "/calendars":
    get:
      tags:
        - "calendar"
      summary: "カレンダーの表示に関するデータを取得"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "取得が成功した場合"
          content:
            application/json:
              schema:
                type: object
                properties:
                  calendar:
                    type: array
                    items:
                      type: object
                      properties:
                        month:
                          type: integer
                          example: 1
                        day:
                          type: integer
                          example: 1
                        holiday:
                          type: string
                          example: "元日"
                        shifts:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              title:
                                type: string
                                example: "バンド練習"
                              color:
                                type: string
                                example: "#FF0000"
                  goalMonthlyIncome:
                    type: integer
                    description: "目標金額"
                    example: 50000
                  currentIncome:
                    type: integer
                    description: "現在の金額"
                    example: 15000
                  expectedIncome:
                    type: integer
                    description: "見込み"
                    example: 60000
                  billingGoalMoney:
                    type: integer
                    description: "期待値金額"
                    example: 20000
  "/shifts":
    post:
      tags:
        - "shift"
      summary: "シフトの新規登録"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Shift"
      responses:
        "200":
          description: "登録が成功した場合"
    get:
      tags:
        - "shift"
      summary: "シフトの一覧に関するデータを取得"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "取得が成功した場合"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    part_time_id:
                      type: integer
                      example: 1
                    shift_title:
                      type: string
                      example: "バンド練習"
                    work_start:
                      type: string
                      format: date-time
                      example: "2022-01-01T10:00:00"
                    work_end:
                      type: string
                      format: date-time
                      example: "2022-01-01T18:00:00"
                    rest_time:
                      type: integer
                      example: 60
                    shift_memo:
                      type: string
                      example: "バンド練習です"
  "/shifts/{id}":
    get:
      tags:
        - "shift"
      summary: "シフトの詳細に関するデータを取得"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "シフトID"
          schema:
            type: integer
      responses:
        "200":
          description: "取得が成功した場合"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shift"
    put:
      tags:
        - "shift"
      summary: "シフトの詳細に関するデータを更新"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "シフトID"
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Shift"
      responses:
        "200":
          description: "更新が成功した場合"
    delete:
      tags:
        - "shift"
      summary: "シフトの削除"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "シフトID"
          schema:
            type: integer
      responses:
        "200":
          description: "削除が成功した場合"
  "/part_times":
    get:
      tags:
        - "partTime"
      security:
        - BearerAuth: []
      summary: "バイトの一覧に関するデータを取得"
      responses:
        "200":
          description: "取得が成功した場合"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "放課後ティータイム"
    post:
      tags:
        - "partTime"
      summary: "バイトの新規登録"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartTime"
      responses:
        "200":
          description: "登録が成功した場合"
  "/part_times/{id}":
    get:
      tags:
        - "partTime"
      security:
        - BearerAuth: []
      summary: "バイトの詳細に関するデータを取得"
      parameters:
        - name: id
          in: path
          required: true
          description: "バイトID"
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: "取得が成功した場合"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartTime"
    put:
      tags:
        - "partTime"
      summary: "バイトの詳細に関するデータを更新"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "バイトID"
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartTime"
      responses:
        "200":
          description: "更新が成功した場合"
    delete:
      tags:
        - "partTime"
      summary: "バイトの削除"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "バイトID"
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: "削除が成功した場合"
  "/billing_goal":
    get:
      tags:
        - "billingGoal"
      security:
        - BearerAuth: []
      summary: "期待値計算に関するデータを取得"
      deprecated: true
      responses:
        "200":
          description: "取得が成功した場合"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingGoal"
    post:
      tags:
        - "billingGoal"
      security:
        - BearerAuth: []
      summary: "期待値計算の新規登録"
      deprecated: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingGoal"
      responses:
        "200":
          description: "追加が成功した場合"
    put:
      tags:
        - "billingGoal"
      summary: "期待値計算の更新"
      deprecated: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingGoal"
      responses:
        "200":
          description: "更新が成功した場合"
    delete:
      deprecated: true
      tags:
        - "billingGoal"
      summary: "期待値計算の削除"
      responses:
        "200":
          description: "削除が成功した場合"
  "/graph/{year}":
    get:
      tags:
        - "graph"
      summary: "年間のグラフに関するデータを取得"
      deprecated: true
      parameters:
        - name: year
          in: path
          required: true
          description: "年"
          schema:
            type: integer
            example: 2022
      responses:
        "200":
          description: "取得が成功した場合"
          content:
            application/json:
              schema:
                type: object
                properties:
                  goalMonthlyIncome:
                    type: integer
                    description: "目標月収"
                    example: 100100
                  monthList:
                    type: array
                    items:
                      type: object
                      properties:
                        month:
                          type: integer
                          example: 1
                        expectedMoney:
                          type: integer
                          example: 100000
                          description: "予想給与"
                        finalMoney:
                          type: integer
                          example: 101473
                          description: "最終給与"
  "/graph/{year}/{month}":
    get:
      tags:
        - "graph"
      summary: "月間のグラフに関するデータを取得"
      deprecated: true
      parameters:
        - name: year
          in: path
          required: true
          description: "年"
          schema:
            type: integer
            example: 2022
        - name: month
          in: path
          required: true
          description: "月"
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: "取得が成功した場合"
          content:
            application/json:
              schema:
                type: object
                properties:
                  goalMonthlyIncome:
                    type: integer
                    description: "目標月収"
                    example: 100100
                  MonthIncome:
                    type: integer
                    example: 101473
                    description: "今月の給与。最終給与がない場合は予想給与を返す"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    PartTime:
      type: object
      properties:
        part_time:
          type: object
          properties:
            job_name:
              type: string
              example: "放課後ティータイム"
            hourly_wage:
              type: integer
              example: 1070
            transportation_allowance:
              type: integer
              example: 0
            Holiday_allowance:
              type: integer
              example: 0
            time_allowance_start:
              type: string
              example: "17:00"
            time_allowance_end:
              type: string
              example: "20:00"
            target_monthly_income:
              type: integer
              example: 100000
            closing_date:
              type: integer
              example: 30
            transfer_date:
              type: integer
              example: 25
            up_manny:
              type: integer
              example: 1312
            part_time_color_id:
              type: integer
              example: 1
    BillingGoal:
      type: object
      properties:
        title:
          type: string
          example: "誕生日プレゼントガチャ"
        money:
          type: integer
          example: 160
          description: "一回あたりのガチャ金額"
        count:
          type: integer
          example: 10
          description: "ガチャを引きたい回数"
        probability:
          type: integer
          example: 1
          description: "目当ての種類の確率（%）"
        start_date:
          type: string
          format: date
          example: "2022-01-01"
          description: "貯め始めた日"
        memo:
          type: string
          example: "あずにゃんの誕生日プレゼント"
    Shift:
      properties:
        shift:
          type: object
          properties:
            part_time_id:
              type: integer
              example: 1
            shift_title:
              type: string
              example: "バンド練習"
            work_start:
              type: string
              format: date-time
              example: "2022-01-01T10:00:00"
            work_end:
              type: string
              format: date-time
              example: "2022-01-01T18:00:00"
            rest_time:
              type: integer
              example: 60
            shift_memo:
              type: string
              example: "バンド練習です"
